rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isParticipant(conversation) {
      return request.auth.uid in conversation.participants;
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if false; // Never allow deletion
    }
    
    // Presence collection
    match /presence/{userId} {
      allow read: if isSignedIn();
      allow write: if isOwner(userId);
    }
    
    // Conversations collection
    match /conversations/{conversationId} {
      allow read: if isSignedIn() && isParticipant(resource.data);
      allow create: if isSignedIn() && isParticipant(request.resource.data);
      allow update: if isSignedIn() && isParticipant(resource.data);
      allow delete: if false; // Never allow deletion
      
      // Messages subcollection
      match /messages/{messageId} {
        allow read: if isSignedIn() && isParticipant(get(/databases/$(database)/documents/conversations/$(conversationId)).data);
        allow create: if isSignedIn() && isParticipant(get(/databases/$(database)/documents/conversations/$(conversationId)).data);
        allow update: if isSignedIn() && isParticipant(get(/databases/$(database)/documents/conversations/$(conversationId)).data);
        allow delete: if false;
      }
      
      // Typing status subcollection - simplified permissions
      // Typing indicators are ephemeral and not security-critical
      match /typing/{userId} {
        allow read: if isSignedIn();
        allow write: if isSignedIn() && isOwner(userId);
      }
    }
  }
}
